name: Docker Wyze Bridge
description: WebRTC/RTSP/RTMP/LL-HLS bridge for Wyze cams in a docker container.
slug: docker_wyze_bridge
url: https://github.com/waelsamy/docker-wyze-bridge
image: waelewida/wyze-bridge
version: 4.0.3
stage: stable
arch:
  - armv7
  - aarch64
  - amd64
startup: application
boot: auto
apparmor: false
hassio_api: true
host_network: true
ports:
  1935/tcp: 1935
  1936/tcp: 1936
  2935/tcp: 2935
  2936/tcp: 2936
  8000/udp: 8000
  8001/udp: 8001
  8002/udp: 8002
  8003/udp: 8003
  8189/udp: 8189
  8189/tcp: 8189
  8322/tcp: 8322
  8554/tcp: 8554
  8888/tcp: 8888
  8889/tcp: 8889
  8890/udp: 8890
  5000/tcp: 5000
ports_description:
  1935/tcp: RTMP rtmp://localhost:1935/mystream?user=myuser&pass=mypass
  1936/tcp: RTMP rtmps://localhost:1936/mystream?user=myuser&pass=mypass
  2935/tcp: RTMPS rtmps://localhost:2935/mystream?user=myuser&pass=mypass
  2936/tcp: RTMPS rtmps://localhost:2936/mystream?user=myuser&pass=mypass
  8000/udp: RTSP UDP/RTP rtsp://localhost:8000/mystream
  8001/udp: RTSP UDP/RTCP rtsp://localhost:8001/mystream
  8002/udp: RTSP RTP Multicast
  8003/udp: RTSP RTCP Multicast control
  8189/udp: WebRTC ICE/UDP
  8322/tcp: TCP/TLS/RTSPS rtsps://localhost:8322/mystream
  8554/tcp: RTSP rtsp://localhost:8554/mystream
  8888/tcp: HLS http://localhost:8888/mystream
  8889/tcp: WebRTC http://localhost:8889/mystream and http://localhost:8889/mystream/whep
  8890/udp: SRT UDP srt://localhost:8890?streamid=read:mystream:myuser:mypass
  5000/tcp: WEB-UI http://localhost:5000/mystream
map:
  - addon_config:rw
  - media:rw
  - ssl:ro
services:
  - mqtt:want
video: true
ingress: true
ingress_port: 5000
panel_icon: mdi:bridge
watchdog: http://[HOST]:[PORT:5000]/health
options:
  ENABLE_AUDIO: true
  ON_DEMAND: true
  MOTION_API: true
  CAM_OPTIONS: []
  MEDIAMTX: []
schema:
  WYZE_EMAIL: email?
  WYZE_PASSWORD: password?
  API_ID: match(\s*[a-fA-F0-9-]{36}\s*)?
  API_KEY: match(\s*[a-zA-Z0-9]{60}\s*)?
  WB_IP: str?
  REFRESH_TOKEN: str?
  ACCESS_TOKEN: str?
  TOTP_KEY: str?
  NET_MODE: list(LAN|P2P|ANY)?
  SNAPSHOT: list(API|RTSP|RTSP15|RTSP30|RTSP60|RTSP180|RTSP300|Disable)?
  SNAPSHOT_FORMAT: str?
  SNAPSHOT_KEEP: str?
  IMG_TYPE: list(jpg|png)?
  IMG_DIR: str?
  ENABLE_AUDIO: bool?
  ON_DEMAND: bool?
  MOTION_API: bool?
  MOTION_INT: float(1.1,)?
  MOTION_START: bool?
  MOTION_WEBHOOKS: str?
  SUBSTREAM: bool?
  AUDIO_CODEC: list(COPY|AAC|LIBOPUS|MP3|PCM_MULAW|PCM_ALAW)?
  AUDIO_FILTER: str?
  LLHLS: bool?
  DISABLE_CONTROL: bool?
  RTSP_FW: bool?
  RECORD_ALL: bool?
  RECORD_KEEP: str?
  RECORD_LENGTH: str?
  RECORD_PATH: str?
  RECORD_FILE_NAME: str?
  MQTT: bool?
  MQTT_HOST: str?
  MQTT_AUTH: str?
  MQTT_TOPIC: str?
  MQTT_DTOPIC: str?
  MQTT_RETRIES: int?
  FILTER_NAMES: str?
  FILTER_MODELS: str?
  FILTER_MACS: str?
  FILTER_BLOCK: bool?
  ROTATE_DOOR: bool?
  H264_ENC: str?
  FORCE_ENCODE: bool?
  IGNORE_OFFLINE: bool?
  OFFLINE_TIME: int?
  FRESH_DATA: bool?
  URI_MAC: bool?
  URI_SEPARATOR: list(-|_|#)?
  QUALITY: str?
  SUB_QUALITY: str?
  FORCE_FPS: int?
  SUB_RECORD: bool?
  FFMPEG_FLAGS: str?
  FFMPEG_CMD: str?
  LOG_LEVEL: list(FATAL|ERROR|WARNING|INFO|DEBUG)?
  LOG_FILE: bool?
  LOG_TIME: bool?
  FFMPEG_LOGLEVEL: list(quiet|panic|fatal|error|warning|info|verbose|debug)?
  IGNORE_RES: int?
  BOA_ENABLED: bool?
  BOA_INTERVAL: int?
  BOA_TAKE_PHOTO: bool?
  BOA_PHOTO: bool?
  BOA_ALARM: bool?
  BOA_MOTION: str?
  BOA_COOLDOWN: int?
  CAM_OPTIONS:
    - CAM_NAME: str?
      AUDIO: bool?
      FFMPEG: str?
      LIVESTREAM: str?
      NET_MODE: str?
      ROTATE: bool?
      QUALITY: str?
      SUB_QUALITY: str?
      FORCE_FPS: int?
      RECORD: bool?
      SUB_RECORD: bool?
      SUBSTREAM: bool?
      MOTION_WEBHOOKS: str?
  MEDIAMTX:
    - match(^\w+=.*)?
  DOMAIN: str?
  WB_HLS_URL: url?
  WB_RTMP_URL: url?
  WB_RTSP_URL: url?
  WB_WEBRTC_URL: url?
  WB_AUTH: bool?
  WB_USERNAME: str?
  WB_PASSWORD: str?
  STREAM_AUTH: str?
  STUN_SERVER: str?
  LATITUDE: float?
  LONGITUDE: float?
