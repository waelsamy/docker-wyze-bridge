ARG BUILD
ARG BUILD_DATE
ARG GITHUB_SHA

FROM python:3.13-slim-bookworm AS base

FROM base AS builder
ARG BUILD_DATE

RUN --mount=type=cache,target=/var/cache/apt,sharing=locked \
    --mount=type=cache,target=/var/lib/apt,sharing=locked \
    set -eux; \
    apt-get update; \
    apt-get install -y --no-install-recommends \
        build-essential \
        curl \
        gcc \
        libffi-dev; \
    apt-get clean; \
    rm -rf /var/lib/apt/lists/*

COPY /app/ /build/app/

# Create lightweight requirements.txt for API-only mode
RUN echo "Flask==3.1.*" > /build/app/requirements-api.txt && \
    echo "paho-mqtt==2.1.*" >> /build/app/requirements-api.txt && \
    echo "pydantic==2.11.*" >> /build/app/requirements-api.txt && \
    echo "python-dotenv==1.1.*" >> /build/app/requirements-api.txt && \
    echo "requests==2.32.*" >> /build/app/requirements-api.txt && \
    echo "PyYAML==6.0.*" >> /build/app/requirements-api.txt && \
    echo "xxtea==3.3.*" >> /build/app/requirements-api.txt && \
    echo "astral==3.*" >> /build/app/requirements-api.txt && \
    echo "tzlocal==5.3.*" >> /build/app/requirements-api.txt

RUN --mount=type=cache,target=/root/.cache/pip \
    set -eux; pip3 install --disable-pip-version-check --prefix=/build/usr/local -r /build/app/requirements-api.txt

RUN set -eux; \
    echo "BUILDING API-ONLY IMAGE FOR $(uname -m)";\
    if [ "$(uname -m)" = "armv7l" ]; then \
        TARGETARCH=arm; \
    elif [ "$(uname -m)" = "aarch64" ]; then \
        TARGETARCH=arm64; \
    else \
        TARGETARCH=amd64; \
    fi; \
    cd /build; \
    mkdir -p tokens img; \
    cp app/lib/lib.${TARGETARCH} usr/local/lib/libIOTCAPIs_ALL.so; \
    rm -rf app/lib/; \
    if [ -z "${BUILD_DATE}" ]; \
        then echo BUILD_DATE=$(date) > .build_date; \
        else echo BUILD_DATE=${BUILD_DATE} > .build_date; \
    fi;

# Create API-only run script
RUN echo '#!/bin/bash' > /build/app/run-api && \
    echo 'set -e' >> /build/app/run-api && \
    echo '' >> /build/app/run-api && \
    echo '# Set API-only mode environment' >> /build/app/run-api && \
    echo 'export API_ONLY_MODE=true' >> /build/app/run-api && \
    echo 'export FLASK_APP=api_only' >> /build/app/run-api && \
    echo '' >> /build/app/run-api && \
    echo 'echo "🚀 Starting Docker Wyze Bridge API-Only Mode"' >> /build/app/run-api && \
    echo 'echo "📡 Video streaming disabled, camera control enabled"' >> /build/app/run-api && \
    echo '' >> /build/app/run-api && \
    echo '# Start API-only bridge' >> /build/app/run-api && \
    echo 'if [ "${FLASK_RUN:-}" = "true" ]; then' >> /build/app/run-api && \
    echo '  echo "🌐 Starting Flask development server"' >> /build/app/run-api && \
    echo '  exec flask run --host=0.0.0.0 --port=${FLASK_PORT:-5000}' >> /build/app/run-api && \
    echo 'else' >> /build/app/run-api && \
    echo '  echo "🎯 Starting production API-only bridge"' >> /build/app/run-api && \
    echo '  exec python3 wyze_bridge.py' >> /build/app/run-api && \
    echo 'fi' >> /build/app/run-api && \
    chmod +x /build/app/run-api

FROM base
ARG BUILD
ARG GITHUB_SHA
ARG BUILD_DATE
ARG BUILD_VERSION

RUN set -eux; \
    rm /var/log/*.log ; \
    rm -rf /var/log/apt ;

COPY --from=builder /build /

ENV PYTHONUNBUFFERED=1 \
    API_ONLY_MODE=true \
    FLASK_APP=api_only \
    BUILD=$BUILD \
    BUILD_VERSION=$BUILD_VERSION \
    BUILD_DATE=$BUILD_DATE \
    GITHUB_SHA=$GITHUB_SHA \
    FLASK_ENV=production \
    FLASK_DEBUG=0

WORKDIR /app
ENTRYPOINT [ "/app/run-api" ]

# API-only mode exposes only HTTP port (no RTSP/streaming ports)
EXPOSE 5000

LABEL \
    io.hass.name="Docker Wyze Bridge API-Only for Home Assistant" \
    io.hass.description="API-only bridge for Wyze cameras without video streaming - camera control and MQTT only" \
    io.hass.type="addon" \
    io.hass.version=${BUILD_VERSION} \
    maintainer="Wael Ewida <waelsamy@mail.com>" \
    org.label-schema.name="Docker Wyze Bridge API-Only" \
    org.label-schema.description="Lightweight API-only bridge for Wyze camera control" \
    org.label-schema.build-date=${BUILD_DATE} \
    org.label-schema.schema-version="1.0" \
    org.label-schema.usage="https://github.com/waelsamy/docker-wyze-bridge/blob/main/README.md" \
    org.label-schema.vcs-ref=${GITHUB_SHA} \
    org.label-schema.vcs-url="https://github.com/waelsamy/docker-wyze-bridge/" \
    org.label-schema.vendor="HomeAssistant add-ons by Wael Ewida"